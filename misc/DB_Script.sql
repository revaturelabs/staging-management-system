drop user sms cascade;

create user sms
identified by swordfish
default tablespace users
temporary tablespace temp
quota 10m on users;

grant connect to sms;
grant resource to sms;
grant create session to sms;
grant create table to sms;
grant create view to sms;
grant create trigger to sms;
grant create sequence to sms;

connect sms/swordfish

///////////////////////////////////////

CREATE TABLE CREDENTIALS (
  CREDENTIAL_ID NUMBER PRIMARY KEY,
  USERNAME VARCHAR2(64),
  PASSWORD VARCHAR2(128)
);
CREATE SEQUENCE CREDENTIAL_ID_SEQ;

CREATE TABLE PERMISSIONS (
  PERMISSION_ID NUMBER PRIMARY KEY,
  PERMISSION_LEVEL VARCHAR2(16)
);
CREATE SEQUENCE PERMISSION_ID_SEQ;

CREATE TABLE MANAGERS (
  MANAGER_ID NUMBER PRIMARY KEY,
  CREDENTIAL_ID NUMBER,
  PERMISSION_ID NUMBER,
  NAME VARCHAR2(64),
  CONSTRAINT FK_ManagerCredential FOREIGN KEY (CREDENTIAL_ID) REFERENCES CREDENTIALS(CREDENTIAL_ID),
  CONSTRAINT FK_ManagerPermission FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS(PERMISSION_ID)
);
CREATE SEQUENCE MANAGER_ID_SEQ;

CREATE TABLE BATCH_TYPES (
  BATCH_TYPE_ID NUMBER PRIMARY KEY,
  BATCH_TYPE VARCHAR2(64)
);
CREATE SEQUENCE BATCH_TYPE_ID_SEQ;

CREATE TABLE LOCATIONS (
  LOCATION_ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(64),
  COUNTRY VARCHAR2(64),
  STATE VARCHAR2(64),
  CITY VARCHAR2(64)
);
CREATE SEQUENCE LOCATION_ID_SEQ;

CREATE TABLE BATCHES (
  BATCH_ID NUMBER PRIMARY KEY,
  BATCH_TYPE_ID NUMBER,
  START_DATE DATE,
  END_DATE DATE,
  LOCATION_ID NUMBER,
  CONSTRAINT FK_BatchBatchtype FOREIGN KEY (BATCH_TYPE_ID) REFERENCES BATCH_TYPES(BATCH_TYPE_ID),
  CONSTRAINT FK_BatchLocation FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID)
);
CREATE SEQUENCE BATCH_ID_SEQ;

CREATE TABLE ASSOCIATES (
  ASSOCIATE_ID NUMBER PRIMARY KEY,
  CREDENTIAL_ID NUMBER,
  NAME VARCHAR2(64),
  PORTFOLIO_LINK VARCHAR2(128),
  BATCH_ID NUMBER,
  CONSTRAINT FK_AssociateCredential FOREIGN KEY (CREDENTIAL_ID) REFERENCES CREDENTIALS(CREDENTIAL_ID),
  CONSTRAINT FK_AssociateBatch FOREIGN KEY (BATCH_ID) REFERENCES BATCHES(BATCH_ID)
);
CREATE SEQUENCE ASSOCIATE_ID_SEQ;

CREATE TABLE CHECKINS (
  CHECKIN_ID NUMBER PRIMARY KEY,
  CHECKIN_TIME TIMESTAMP,
  CHECKOUT_TIME TIMESTAMP,
  APPROVED_BY NUMBER, --references managers.manager_id
  APPROVE_TIME TIMESTAMP,
  ASSOCIATE_ID NUMBER,
  CONSTRAINT FK_CheckinApprovedby FOREIGN KEY (APPROVED_BY) REFERENCES MANAGERS(MANAGER_ID),
  CONSTRAINT FK_CheckinAssociate FOREIGN KEY (ASSOCIATE_ID) REFERENCES ASSOCIATES(ASSOCIATE_ID)
);
CREATE SEQUENCE CHECKIN_ID_SEQ;

CREATE TABLE TRAINERS (
  TRAINER_ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(64)
);
CREATE SEQUENCE TRAINER_ID_SEQ;

CREATE TABLE BATCH_TRAINER (
  TRAINER_ID NUMBER,
  BATCH_ID NUMBER,
  CONSTRAINT FK_BatchtrainerTrainer FOREIGN KEY (TRAINER_ID) REFERENCES TRAINERS(TRAINER_ID),
  CONSTRAINT FK_BatchtrainerBatch FOREIGN KEY (BATCH_ID) REFERENCES BATCHES(BATCH_ID)
);

CREATE TABLE CLIENTS (
  CLIENT_ID NUMBER PRIMARY KEY,
  CLIENT_NAME VARCHAR2(64)
);
CREATE SEQUENCE CLIENT_ID_SEQ;

CREATE TABLE INTERVIEW_STATUSES (
  INTERVIEW_STATUS_ID NUMBER PRIMARY KEY,
  INTERVIEW_STATUS VARCHAR2(16)
);
CREATE SEQUENCE INTERVIEW_STATUS_ID_SEQ;

CREATE TABLE INTERVIEWS (
  INTERVIEW_ID NUMBER PRIMARY KEY,
  ASSOCIATE_ID NUMBER,
  CLIENT_ID NUMBER,
  INTERVIEW_STATUS_ID NUMBER,
  CONSTRAINT FK_InterviewAssociate FOREIGN KEY (ASSOCIATE_ID) REFERENCES ASSOCIATES(ASSOCIATE_ID),
  CONSTRAINT FK_InterviewClient FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS(CLIENT_ID),
  CONSTRAINT FK_InterviewInterviewstatus FOREIGN KEY (INTERVIEW_STATUS_ID) REFERENCES INTERVIEW_STATUSES(INTERVIEW_STATUS_ID)
);
CREATE SEQUENCE INTERVIEW_ID_SEQ;

CREATE TABLE JOBS(
  JOB_ID NUMBER PRIMARY KEY,
  ASSOCIATE_ID NUMBER,
  CLIENT_ID NUMBER,
  START_DATE DATE,
  PROJECTED_END_DATE DATE,
  ACTUAL_END_DATE DATE,
  BUYOUT_DATE DATE,
  CONSTRAINT FK_JobAssociate FOREIGN KEY (ASSOCIATE_ID) REFERENCES ASSOCIATES(ASSOCIATE_ID),
  CONSTRAINT FK_JobClient FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS(CLIENT_ID)
);
CREATE SEQUENCE JOB_ID_SEQ;

CREATE TABLE INTERVIEW_QUESTIONS (
  INTERVIEW_QUESTION_ID NUMBER PRIMARY KEY,
  BATCH_TYPE_ID NUMBER,
  QUESTION VARCHAR2(256),
  CONSTRAINT FK_InterviewquestionBatchtype FOREIGN KEY (BATCH_TYPE_ID) REFERENCES BATCH_TYPES(BATCH_TYPE_ID)
);
CREATE SEQUENCE INTERVIEW_QUESTION_ID_SEQ;

CREATE TABLE CLIENT_QUESTIONS (
  CLIENT_QUESTION_ID NUMBER PRIMARY KEY,
  CLIENT_ID NUMBER,
  INTERVIEW_QUESTION_ID NUMBER,
  ASSOCIATE_ID NUMBER,
  CONSTRAINT FK_ClientquestionsClient FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS(CLIENT_ID),
  CONSTRAINT FK_ClientquestionsIQ FOREIGN KEY (INTERVIEW_QUESTION_ID) REFERENCES INTERVIEW_QUESTIONS(INTERVIEW_QUESTION_ID)
);
CREATE SEQUENCE CLIENT_QUESTION_ID_SEQ;